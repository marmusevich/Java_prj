package protocol.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.Connection;
import java.util.ArrayList;

//Команда findls
//        Выполняет функции поиска данных по единому лицевому счету
//        1.	findls при успешном выполнении возвращает FINDLS и ожидает передачи данных в формате TString (массив строк)
//        2.	Передача параметров в формате TString (массив строк)
//        Наименования параметров:
//        ID_TERMINAL = Идентификатор терминала, обязательный параметр;
//        LOGIN = Выданный логин, обязательный параметр;
//        LS = Единый лицевой счет абонента, обязательный параметр;
//
//        Количество передаваемых параметров – три. В случае неправильного написание наименования параметров, параметр будет проигнорирован, и заполнен значением по умолчанию. В случае не заполнения одного из обязательных параметров сервер вернет ошибку выполнения команды.  Параметры могут быть перечислены в любой последовательности.
//
//        3.	Далее сервер возвращает число количества строк в возвращаемом параметре TString (массив строк);
//        4.	После возвращает значение TString (массив строк) с заполненными данными, которые представляются в структуре:
//        •	DTM  - Актуальная дата начислений
//        •	USLUGANAME - Наименование услуги (Либо указание на счетчик и его номер)
//        •	IDEN_SHET – Если это прибор учета то отображается его номер, если нет счетчика то 0
//        •	USLUGA – Код услуги согласно справочника Видов услуг (VIDUSLUGI)*
//        •	POKAZ_PRED – Если это прибор учета, то отображаются предыдущие показания если нет прибора то 0
//        •	POKAZ_TEK – Если это прибор учета,  то отображаются текущие показания если нет прибора то 0
//        •	FIO – Фамилия И.О.  абонента зарегистрированного за услугой поставщиком услуг
//        •	TARIF – Тариф за оказанную услугу
//        •	KOPLATE – Сумма к оплате
//        •	ADDRESS – Адрес абонента зарегистрированного за услугой
//        •	NS – Единый номер лицевого счета
//        •	LS_POLUCH – лицевой счет поставщика услуг.
//        •	KOD_POLUCH – код поставщика услуг согласно справочника организаций (ORGANIZATION)*
//        •	ORGANIZATION – Наименование организации поставщика услуг
//        •	MFO – МФО поставщика услуг
//        •	OKPO – ОКПО поставщика услуг
//        •	BANK – Наименование банка поставщика услуг.
//        •	R_SHET – Расчетный счет поставщика услуг
//        •	CITY – Код города
//        Значение данных выделяется в отдельную строку. Параметры разделяются вертикальной чертой “|”  и записываются в строгом порядке указанном выше.
//
//        * - все значения дополнительных справочников  можно получить командой gettable


/**
 * Created by lexa on 08.12.2016.
 */
public class CommandFindLs extends AbstractCommand {
    private static final Logger logger = LoggerFactory.getLogger(CommandFindLs.class);

    @Override
    public void doWorck(ArrayList<String> result, Connection connectionToTerminalDB, Connection connectionToWorkingDB) {
    }
}
