package protocol.commands;

import protocol.bd.DBContext;

//Команда lsfindadr
//        Выполняет функции поиска данных по адресу абонента и возвращает список единых лицевых счетов, соответствующих заданному поиску по адресу
//        1.	lsfindadr при успешном выполнении возвращает LSFINDADR и ожидает передачи данных в формате TString (массив строк)
//        2.	Передача переменной количества параметров в списке TString (массив строк) передается числовым значением.
//        3.	Передача параметров в формате TString (массив строк)
//        Наименования параметров:
//        ID_TERMINAL = Идентификатор терминала, обязательный параметр;
//        LOGIN = Выданный логин, обязательный параметр;
//        CITY = Код города из справочника городов [CITY], обязательный параметр;
//        STREET = Код улицы из справочника улиц [STREET] , обязательный параметр;
//        HOME = Номер дома, обязательный параметр;
//        KORP = Корпус дома, обязательный параметр (в случае отсутствия указывать пустое значение);
//        KV = Номер квартиры, обязательный параметр (в случае отсутствия указывать пустое значение);
//
//        В случае неправильного написание наименования параметров, параметр будет проигнорирован, и заполнен значением по умолчанию. В случае не заполнения одного из обязательных параметров сервер вернет ошибку выполнения команды.  Параметры могут быть перечислены в любой последовательности.
//
//        4.	Далее сервер возвращает число количества строк в возвращаемом параметре TString (массив строк)
//        5.	После возвращает значение TString (массив строк) с заполненными данными, которые представляются в структуре:
//        •	LS  - Номер единого лицевого счета
//        •	FIO – Фамилия И.О.  абонента зарегистрированного за услугой поставщиком услуг
//        Значение данных выделяется в отдельную строку. Параметры разделяются вертикальной чертой “|”  и записываются в строгом порядке указанном выше.


/**
 * Created by lexa on 08.12.2016.
 */
public class CommandLsFindAdr extends AbstractCommand {
    @Override
    public void executeImpl(DBContext dbContext) {
    }
}
