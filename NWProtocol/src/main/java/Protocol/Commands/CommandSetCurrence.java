package protocol.commands;

import protocol.bd.DBContext;

//Команда setcurrence
//        Выполняет процедуру регистрации пачки купюр. При вставке купюры в базу вносится ее номенклатура с указанием цифрового значения текущего генератора купюроприемника. Значение генератора наращивается на единицу лишь после выполнения команды startoplata.
//        1.	setcurrence при успешном выполнении возвращает SETCUR
//        2.	Возвращение результата выполнения команды
//        В случае успешного выполнения команды возвращается 200 ОК, в случае возникновения какой либо ошибки выводится сообщение 500 ERROR. По завершению работы команды происходит отключение от сервера.
//        Наименования параметров:
//        ID_TERMINAL = Идентификатор терминала, обязательный параметр;
//        LOGIN = Выданный логин, обязательный параметр;
//        NOM = Номенклатура денежной единицы, обязательный параметр;
//        ID_CURRENCE-Код сессии купюроприемника, значение текущее значение можно получить командой startoplata
//
//        В случае неправильного написание наименования параметров, параметр будет проигнорирован, и заполнен значением по умолчанию. В случае не заполнения одного из обязательных параметров сервер вернет ошибку выполнения команды.  Параметры могут быть перечислены в любой последовательности.
//
//        3.	Возвращение результата выполнения команды
//        В случае успешного выполнения команды возвращается 200 ОК, в случае возникновения какой либо ошибки выводится сообщение 500 ERROR. По завершению работы команды происходит отключение от сервера.



/**
 * Created by lexa on 08.12.2016.
 */
public class CommandSetCurrence extends AbstractCommand {
    @Override
    public void executeImpl(DBContext dbContext) {
    }
}
