package protocol.commands;

import protocol.bd.DBContext;

//Команда setstorno
//        Выполняет процедуру сторнирования платежа:
//        1.	setstorno при успешном выполнении возвращает STORNO и ожидает передачи данных в формате TString (массив строк)
//        2.	Передача переменной количества параметров в списке TString (массив строк) передается числовым значением.
//        3.	Передача параметров в формате TString (массив строк)
//        Наименования параметров:
//        ID_TERMINAL = Идентификатор терминала, обязательный параметр;
//        LOGIN = Выданный логин, обязательный параметр;
//        PAY_ID = ID платежа по которому необходимо совершить сторно;
//        DATA = Указывается дата и время сторнирования, обычно это текущая дата и время
//        SUMMA = Указывается сумма сторнирования, обязательный параметр
//        TIP = Указывается тип сторно, если TIP = 0 то это обычное сторно, если TIP = 1 то это признак сдачи, параметр не обязательный, по умолчанию равен 0;
//
//        В случае неправильного написание наименования параметров, параметр будет проигнорирован, и заполнен значением по умолчанию. В случае не заполнения одного из обязательных параметров сервер вернет ошибку выполнения команды.  Параметры могут быть перечислены в любой последовательности.
//
//        4.	Возвращение результата выполнения команды
//        В случае успешного выполнения команды возвращается 200 ОК, в случае возникновения какой либо ошибки выводится сообщение 500 ERROR, либо 500 и описание ошибки. По завершению работы команды происходит отключение от сервера.



/**
 * Created by lexa on 08.12.2016.
 */
public class CommandSetStorno extends AbstractCommand {
    @Override
    public void doWorck(DBContext dbContext) {
    }
}
