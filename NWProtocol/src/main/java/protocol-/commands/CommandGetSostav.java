package protocol.commands;

import protocol.bd.DBContext;

//Команда getsostav
//        Возвращает список состава услуг согласно заданному параметру вида услуг (USLUGA)
//        1.	getsostav при успешном выполнении возвращает GSOSTAV
//        2.	Возвращение результата выполнения команды
//        В случае успешного выполнения команды возвращается 200 ОК, в случае возникновения какой либо ошибки выводится сообщение 500 ERROR. По завершению работы команды происходит отключение от сервера.
//        Наименования параметров:
//        ID_TERMINAL = Идентификатор терминала, обязательный параметр;
//        LOGIN = Выданный логин, обязательный параметр;
//        USLUGA= Код услуги по которой нужно получить состав услуг, обязательный параметр;
//        KOD_ORG= Код организации по которой нужно получить состав услуг, обязательный параметр;
//
//
//        В случае неправильного написания наименования параметров, параметр будет проигнорирован, и заполнен значением по умолчанию. В случае не заполнения одного из обязательных параметров сервер вернет ошибку выполнения команды.  Параметры могут быть перечислены в любой последовательности.
//        3.	Далее сервер возвращает число количества строк в возвращаемом параметре TString (массив строк)
//        4.	После возвращает значение TString (массив строк) с заполненными данными, которые представляются в структуре:
//        •	USLUGA – Код услуги в которой включен данный состав
//        •	NAME  - Наименование состава услуг
//        •	TIP_RASHETA – Код типа расчета по составу услуг
//        •	ZNACH – Значение коэффициента расчета состава услуг
//        •	KOD_ORG – Код организации для которой выполняется расчет состава услуг, код берется из справочника ORGANIZATION;
//        •	DOP_USLUGA – Код дополнительной услуги;
//        •	DOP_ORGANIZATION  – Код дополнительной организации для которой выполняется расчет состава услуг, код берется из справочника ORGANIZATION;
//        •
//        Значение данных выделяется в отдельную строку. Параметры разделяются вертикальной чертой “|”  и записываются в строгом порядке указанном выше.
//        5.	Возвращение результата выполнения команды
//        В случае успешного выполнения команды возвращается 200 ОК, в случае возникновения какой либо ошибки выводится сообщение 500 ERROR. По завершению работы команды происходит отключение от сервера.


/**
 * Created by lexa on 08.12.2016.
 */
public class CommandGetSostav extends AbstractCommand {
    @Override
    public void doWorck(DBContext dbContext) {
    }
}
